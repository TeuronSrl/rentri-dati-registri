# coding: utf-8

"""
    dati-registri

    Servizio dati registri RENTRI

    The version of the OpenAPI document: 1.0.20250114-613
    Contact: techref@rentri.it
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from rentri_dati_registri.models.transazione_id_result_get200_response import TransazioneIdResultGet200Response

class TestTransazioneIdResultGet200Response(unittest.TestCase):
    """TransazioneIdResultGet200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TransazioneIdResultGet200Response:
        """Test TransazioneIdResultGet200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TransazioneIdResultGet200Response`
        """
        model = TransazioneIdResultGet200Response()
        if include_optional:
            return TransazioneIdResultGet200Response(
                esito = rentri_dati_registri.models.esito_valida_registro_data_model.EsitoValidaRegistroDataModel(
                    identificativo_registro = '', 
                    num_iscr_operatore = '', 
                    codice_fiscale_operatore = '', 
                    denominazione_operatore = '', 
                    num_iscr_soggetto_delegato = '', 
                    codice_fiscale_soggetto_delegato = '', 
                    denominazione_soggetto_delegato = '', 
                    num_iscr_sito = '', 
                    indirizzo_sito = '', 
                    data_vidimazione = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    cciaa = '', 
                    identificativo_firma = '', 
                    denominazione_firma = '', 
                    ca_firma = '', 
                    firma_non_etsi = True, 
                    numero_esportazioni_totali = 56, 
                    numero_esportazioni_file = 56, 
                    numero_registrazioni_file = 56, 
                    numero_registrazioni_rentri = 56, 
                    numero_registrazioni_ultima_esportazione = 56, 
                    data_ultima_esportazione = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    ultimo_anno_progressivo_esportato = '', ),
                transazione_id = '',
                validazione = [
                    rentri_dati_registri.models.esito_messaggio_model.EsitoMessaggioModel(
                        indice = 56, 
                        campo = '', 
                        tipo = null, 
                        codice_messaggio = '', 
                        parametri = [
                            null
                            ], )
                    ],
                errore = True,
                tempo_elaborazione = ''
            )
        else:
            return TransazioneIdResultGet200Response(
        )
        """

    def testTransazioneIdResultGet200Response(self):
        """Test TransazioneIdResultGet200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
