# coding: utf-8

"""
    dati-registri

    Servizio dati registri RENTRI

    The version of the OpenAPI document: 1.0.20250114-613
    Contact: techref@rentri.it
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from rentri_dati_registri.models.movimento_model import MovimentoModel  # noqa: E501

class TestMovimentoModel(unittest.TestCase):
    """MovimentoModel unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MovimentoModel:
        """Test MovimentoModel
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MovimentoModel`
        """
        model = MovimentoModel()  # noqa: E501
        if include_optional:
            return MovimentoModel(
                riferimenti = rentri_dati_registri.models.dati_riferimenti_model.DatiRiferimentiModel(
                    numero_registrazione = null, 
                    data_ora_registrazione = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    causale_operazione = null, 
                    stoccaggio_istantaneo = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    numero_registrazione_rettifica = null, 
                    riferimento_operazione = [
                        null
                        ], ),
                rifiuto = rentri_dati_registri.models.dati_rifiuto_model.DatiRifiutoModel(
                    codice_eer = '0', 
                    descrizione_eer = '', 
                    provenienza = null, 
                    caratteristiche_pericolo = [
                        'HP01'
                        ], 
                    stato_fisico = null, 
                    quantita = null, 
                    destinato_attivita = null, 
                    categorie_aee = [
                        'Cat1'
                        ], 
                    veicolo_fuori_uso = True, 
                    veicolo_fuori_uso_reg_pubblica_sicurezza = null, ),
                materiali = rentri_dati_registri.models.dati_materiali_model.DatiMaterialiModel(
                    materiale = null, 
                    descrizione_materiale = '', 
                    quantita = null, ),
                integrazione_fir = rentri_dati_registri.models.dati_integrazione_fir_model.DatiIntegrazioneFirModel(
                    numero_fir = '', 
                    trasporto_transfrontaliero = True, 
                    tipo_trasporto_transfrontaliero = null, 
                    data_inizio_trasporto = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
                esito = rentri_dati_registri.models.dati_esito_model.DatiEsitoModel(
                    data_fine_trasporto = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    peso_verificato_destino = 1.337, 
                    respingimento = null, ),
                produttore = rentri_dati_registri.models.dati_produttore_model.DatiProduttoreModel(
                    denominazione = '', 
                    codice_fiscale = '01234', 
                    nazione_id = '', 
                    indirizzo = null, ),
                trasportatore = rentri_dati_registri.models.dati_trasportatore_model.DatiTrasportatoreModel(
                    denominazione = '0', 
                    codice_fiscale = '01234', 
                    nazione_id = '', 
                    num_iscrizione_albo = 'AE/807288', ),
                destinatario = rentri_dati_registri.models.dati_destinatario_model.DatiDestinatarioModel(
                    denominazione = '0', 
                    codice_fiscale = '01234', 
                    nazione_id = '', 
                    num_autorizzazione = '', ),
                intermediario = rentri_dati_registri.models.dati_intermediario_model.DatiIntermediarioModel(
                    denominazione = '0', 
                    codice_fiscale = '01234', 
                    nazione_id = '', 
                    num_iscrizione_albo = 'AE/807288', ),
                intermediari = [
                    rentri_dati_registri.models.dati_intermediario_model.DatiIntermediarioModel(
                        denominazione = '0', 
                        codice_fiscale = '01234', 
                        nazione_id = '', 
                        num_iscrizione_albo = 'AE/807288', )
                    ],
                annotazioni = ''
            )
        else:
            return MovimentoModel(
                riferimenti = rentri_dati_registri.models.dati_riferimenti_model.DatiRiferimentiModel(
                    numero_registrazione = null, 
                    data_ora_registrazione = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    causale_operazione = null, 
                    stoccaggio_istantaneo = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    numero_registrazione_rettifica = null, 
                    riferimento_operazione = [
                        null
                        ], ),
        )
        """

    def testMovimentoModel(self):
        """Test MovimentoModel"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
