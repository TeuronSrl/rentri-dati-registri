# coding: utf-8

"""
    dati-registri

    Servizio dati registri RENTRI

    The version of the OpenAPI document: 1.0.20250114-613
    Contact: techref@rentri.it
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from datetime import datetime
from typing import Any, Optional
from pydantic import BaseModel, Field, constr
from rentri_dati_registri.models.anno_progressivo_movimento_model import AnnoProgressivoMovimentoModel

class AnnullamentoMovimentoModel(BaseModel):
    """
    Annullamento registrazione  # noqa: E501
    """
    numero_registrazione: AnnoProgressivoMovimentoModel = Field(default=..., description="Numero registrazione della rettifica di annullamento tramite anno di riferimento e progressivo")
    data_ora_registrazione: datetime = Field(default=..., description="Data di registrazione (formato ISO 8601 UTC) dell'annullamento come previsto nel modello di registro RENTRI. Trattandosi di una registrazione informatica, Ã¨ consentito indicare l'ora, anche se non obbligatoria.  <b>Esempi:</b> solo data = \"2024-01-01\", data con ora = \"2024-01-01T12:00:00Z\"")
    numero_registrazione_annullata: Optional[Any] = Field(default=..., description="Numero registrazione della registrazione da annullare")
    annotazioni: constr(strict=True, max_length=500, min_length=1) = Field(default=..., description="Annotazioni contenenti il motivo dell'annullamento")
    __properties = []

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> AnnullamentoMovimentoModel:
        """Create an instance of AnnullamentoMovimentoModel from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> AnnullamentoMovimentoModel:
        """Create an instance of AnnullamentoMovimentoModel from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return AnnullamentoMovimentoModel.parse_obj(obj)

        _obj = AnnullamentoMovimentoModel.parse_obj({
        })
        return _obj


