# coding: utf-8

"""
    dati-registri

    Servizio dati registri RENTRI

    The version of the OpenAPI document: 1.0.20250114-613
    Contact: techref@rentri.it
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from datetime import datetime
from typing import Optional
from pydantic import BaseModel, Field, StrictBool, StrictInt, StrictStr

class EsitoValidaRegistroDataModel(BaseModel):
    """
    EsitoValidaRegistroDataModel
    """
    identificativo_registro: Optional[StrictStr] = Field(default=None, description="Identificativo del registro")
    num_iscr_operatore: Optional[StrictStr] = Field(default=None, description="Numero di iscrizione dell'operatore")
    codice_fiscale_operatore: Optional[StrictStr] = Field(default=None, description="Codice fiscale dell'operatore")
    denominazione_operatore: Optional[StrictStr] = Field(default=None, description="Ragione sociale dell'operatore")
    num_iscr_soggetto_delegato: Optional[StrictStr] = Field(default=None, description="Numero di iscrizione del soggetto delegato")
    codice_fiscale_soggetto_delegato: Optional[StrictStr] = Field(default=None, description="Codice fiscale del soggetto delegato")
    denominazione_soggetto_delegato: Optional[StrictStr] = Field(default=None, description="Ragione sociale del soggetto delegato")
    num_iscr_sito: Optional[StrictStr] = Field(default=None, description="Numero di iscrizione dell'unità locale")
    indirizzo_sito: Optional[StrictStr] = Field(default=None, description="Indirizzo dell'unità locale")
    data_vidimazione: Optional[datetime] = Field(default=None, description="Data di vidimazione del registro informatico")
    cciaa: Optional[StrictStr] = Field(default=None, description="Camera di commercio di appartenenza del registro informatico")
    identificativo_firma: Optional[StrictStr] = Field(default=None, description="Identificativo del soggetto che ha firmato il registro informatico")
    denominazione_firma: Optional[StrictStr] = Field(default=None, description="Denominazione del soggetto che ha firmato il registro informatico")
    ca_firma: Optional[StrictStr] = Field(default=None, description="CA della firma del soggetto che ha firmato il registro informatico")
    firma_non_etsi: Optional[StrictBool] = Field(default=None, description="True se la firma non è XAdES")
    numero_esportazioni_totali: Optional[StrictInt] = Field(default=None, description="Numero totale di esportazioni effettuate")
    numero_esportazioni_file: Optional[StrictInt] = Field(default=None, description="Numero di esportazioni presenti nel file")
    numero_registrazioni_file: Optional[StrictInt] = Field(default=None, description="Numero di registrazioni presenti nel file")
    numero_registrazioni_rentri: Optional[StrictInt] = Field(default=None, description="Numero di registrazioni presenti in RENTRI")
    numero_registrazioni_ultima_esportazione: Optional[StrictInt] = Field(default=None, description="Numero di registrazioni presenti nell'ultima esportazione")
    data_ultima_esportazione: Optional[datetime] = Field(default=None, description="Data dell'ultima esportazione effettuata")
    ultimo_anno_progressivo_esportato: Optional[StrictStr] = Field(default=None, description="Ultimo progressivo esportato")
    __properties = ["identificativo_registro", "num_iscr_operatore", "codice_fiscale_operatore", "denominazione_operatore", "num_iscr_soggetto_delegato", "codice_fiscale_soggetto_delegato", "denominazione_soggetto_delegato", "num_iscr_sito", "indirizzo_sito", "data_vidimazione", "cciaa", "identificativo_firma", "denominazione_firma", "ca_firma", "firma_non_etsi", "numero_esportazioni_totali", "numero_esportazioni_file", "numero_registrazioni_file", "numero_registrazioni_rentri", "numero_registrazioni_ultima_esportazione", "data_ultima_esportazione", "ultimo_anno_progressivo_esportato"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> EsitoValidaRegistroDataModel:
        """Create an instance of EsitoValidaRegistroDataModel from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        # set to None if identificativo_registro (nullable) is None
        # and __fields_set__ contains the field
        if self.identificativo_registro is None and "identificativo_registro" in self.__fields_set__:
            _dict['identificativo_registro'] = None

        # set to None if num_iscr_operatore (nullable) is None
        # and __fields_set__ contains the field
        if self.num_iscr_operatore is None and "num_iscr_operatore" in self.__fields_set__:
            _dict['num_iscr_operatore'] = None

        # set to None if codice_fiscale_operatore (nullable) is None
        # and __fields_set__ contains the field
        if self.codice_fiscale_operatore is None and "codice_fiscale_operatore" in self.__fields_set__:
            _dict['codice_fiscale_operatore'] = None

        # set to None if denominazione_operatore (nullable) is None
        # and __fields_set__ contains the field
        if self.denominazione_operatore is None and "denominazione_operatore" in self.__fields_set__:
            _dict['denominazione_operatore'] = None

        # set to None if num_iscr_soggetto_delegato (nullable) is None
        # and __fields_set__ contains the field
        if self.num_iscr_soggetto_delegato is None and "num_iscr_soggetto_delegato" in self.__fields_set__:
            _dict['num_iscr_soggetto_delegato'] = None

        # set to None if codice_fiscale_soggetto_delegato (nullable) is None
        # and __fields_set__ contains the field
        if self.codice_fiscale_soggetto_delegato is None and "codice_fiscale_soggetto_delegato" in self.__fields_set__:
            _dict['codice_fiscale_soggetto_delegato'] = None

        # set to None if denominazione_soggetto_delegato (nullable) is None
        # and __fields_set__ contains the field
        if self.denominazione_soggetto_delegato is None and "denominazione_soggetto_delegato" in self.__fields_set__:
            _dict['denominazione_soggetto_delegato'] = None

        # set to None if num_iscr_sito (nullable) is None
        # and __fields_set__ contains the field
        if self.num_iscr_sito is None and "num_iscr_sito" in self.__fields_set__:
            _dict['num_iscr_sito'] = None

        # set to None if indirizzo_sito (nullable) is None
        # and __fields_set__ contains the field
        if self.indirizzo_sito is None and "indirizzo_sito" in self.__fields_set__:
            _dict['indirizzo_sito'] = None

        # set to None if data_vidimazione (nullable) is None
        # and __fields_set__ contains the field
        if self.data_vidimazione is None and "data_vidimazione" in self.__fields_set__:
            _dict['data_vidimazione'] = None

        # set to None if cciaa (nullable) is None
        # and __fields_set__ contains the field
        if self.cciaa is None and "cciaa" in self.__fields_set__:
            _dict['cciaa'] = None

        # set to None if identificativo_firma (nullable) is None
        # and __fields_set__ contains the field
        if self.identificativo_firma is None and "identificativo_firma" in self.__fields_set__:
            _dict['identificativo_firma'] = None

        # set to None if denominazione_firma (nullable) is None
        # and __fields_set__ contains the field
        if self.denominazione_firma is None and "denominazione_firma" in self.__fields_set__:
            _dict['denominazione_firma'] = None

        # set to None if ca_firma (nullable) is None
        # and __fields_set__ contains the field
        if self.ca_firma is None and "ca_firma" in self.__fields_set__:
            _dict['ca_firma'] = None

        # set to None if firma_non_etsi (nullable) is None
        # and __fields_set__ contains the field
        if self.firma_non_etsi is None and "firma_non_etsi" in self.__fields_set__:
            _dict['firma_non_etsi'] = None

        # set to None if numero_esportazioni_totali (nullable) is None
        # and __fields_set__ contains the field
        if self.numero_esportazioni_totali is None and "numero_esportazioni_totali" in self.__fields_set__:
            _dict['numero_esportazioni_totali'] = None

        # set to None if numero_esportazioni_file (nullable) is None
        # and __fields_set__ contains the field
        if self.numero_esportazioni_file is None and "numero_esportazioni_file" in self.__fields_set__:
            _dict['numero_esportazioni_file'] = None

        # set to None if numero_registrazioni_file (nullable) is None
        # and __fields_set__ contains the field
        if self.numero_registrazioni_file is None and "numero_registrazioni_file" in self.__fields_set__:
            _dict['numero_registrazioni_file'] = None

        # set to None if numero_registrazioni_rentri (nullable) is None
        # and __fields_set__ contains the field
        if self.numero_registrazioni_rentri is None and "numero_registrazioni_rentri" in self.__fields_set__:
            _dict['numero_registrazioni_rentri'] = None

        # set to None if numero_registrazioni_ultima_esportazione (nullable) is None
        # and __fields_set__ contains the field
        if self.numero_registrazioni_ultima_esportazione is None and "numero_registrazioni_ultima_esportazione" in self.__fields_set__:
            _dict['numero_registrazioni_ultima_esportazione'] = None

        # set to None if data_ultima_esportazione (nullable) is None
        # and __fields_set__ contains the field
        if self.data_ultima_esportazione is None and "data_ultima_esportazione" in self.__fields_set__:
            _dict['data_ultima_esportazione'] = None

        # set to None if ultimo_anno_progressivo_esportato (nullable) is None
        # and __fields_set__ contains the field
        if self.ultimo_anno_progressivo_esportato is None and "ultimo_anno_progressivo_esportato" in self.__fields_set__:
            _dict['ultimo_anno_progressivo_esportato'] = None

        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> EsitoValidaRegistroDataModel:
        """Create an instance of EsitoValidaRegistroDataModel from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return EsitoValidaRegistroDataModel.parse_obj(obj)

        _obj = EsitoValidaRegistroDataModel.parse_obj({
            "identificativo_registro": obj.get("identificativo_registro"),
            "num_iscr_operatore": obj.get("num_iscr_operatore"),
            "codice_fiscale_operatore": obj.get("codice_fiscale_operatore"),
            "denominazione_operatore": obj.get("denominazione_operatore"),
            "num_iscr_soggetto_delegato": obj.get("num_iscr_soggetto_delegato"),
            "codice_fiscale_soggetto_delegato": obj.get("codice_fiscale_soggetto_delegato"),
            "denominazione_soggetto_delegato": obj.get("denominazione_soggetto_delegato"),
            "num_iscr_sito": obj.get("num_iscr_sito"),
            "indirizzo_sito": obj.get("indirizzo_sito"),
            "data_vidimazione": obj.get("data_vidimazione"),
            "cciaa": obj.get("cciaa"),
            "identificativo_firma": obj.get("identificativo_firma"),
            "denominazione_firma": obj.get("denominazione_firma"),
            "ca_firma": obj.get("ca_firma"),
            "firma_non_etsi": obj.get("firma_non_etsi"),
            "numero_esportazioni_totali": obj.get("numero_esportazioni_totali"),
            "numero_esportazioni_file": obj.get("numero_esportazioni_file"),
            "numero_registrazioni_file": obj.get("numero_registrazioni_file"),
            "numero_registrazioni_rentri": obj.get("numero_registrazioni_rentri"),
            "numero_registrazioni_ultima_esportazione": obj.get("numero_registrazioni_ultima_esportazione"),
            "data_ultima_esportazione": obj.get("data_ultima_esportazione"),
            "ultimo_anno_progressivo_esportato": obj.get("ultimo_anno_progressivo_esportato")
        })
        return _obj


